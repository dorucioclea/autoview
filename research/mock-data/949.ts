
import Component from "../components/949";

export type InputType = Parameters<typeof Component>[0];

export function random(): InputType {
  return [{"id":101,"name":"Sample GPG Key (Test)","primary_key_id":null,"key_id":"A1B2C3D4E5F6G7H8","public_key":"-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2.2.20 (GNU/Linux)\nComment: Sample Key\n...\n-----END PGP PUBLIC KEY BLOCK-----","emails":[{"email":"test.user@example.com","verified":true},{"email":"staging.account@example.org","verified":false}],"subkeys":[{"id":102,"primary_key_id":101,"key_id":"H1G2F3E4D5C6B7A8","public_key":"-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2.2.20 (Test)\n...\n-----END PGP PUBLIC KEY BLOCK-----","emails":[{"email":"test.subkey@example.com","verified":true}],"subkeys":[],"can_sign":false,"can_encrypt_comms":true,"can_encrypt_storage":true,"can_certify":false,"created_at":"2025-05-19T12:30:00Z","expires_at":"2026-05-19T12:30:00Z","raw_key":null,"revoked":false},{"key_id":"J1K2L3M4N5O6P7Q8","public_key":"-----BEGIN PGP PUBLIC KEY BLOCK-----\nTest Subkey Only\n-----END PGP PUBLIC KEY BLOCK-----"}],"can_sign":true,"can_encrypt_comms":true,"can_encrypt_storage":true,"can_certify":false,"created_at":"2025-05-19T12:00:00Z","expires_at":"2026-05-19T12:00:00Z","revoked":false,"raw_key":null},{"id":202,"name":null,"primary_key_id":null,"key_id":"Z9Y8X7W6V5U4T3S2","public_key":"-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2.3.1 (Test)\nComment: Sample Key\n...\n-----END PGP PUBLIC KEY BLOCK-----","emails":[{"email":"dummy_contact@example.net"}],"subkeys":[],"can_sign":false,"can_encrypt_comms":false,"can_encrypt_storage":false,"can_certify":false,"created_at":"2025-01-15T09:30:00Z","expires_at":"2025-12-31T23:59:59Z","revoked":true,"raw_key":"-----BEGIN PGP PRIVATE KEY BLOCK-----\nVersion: GnuPG v2.3.1 (Test)\n...\n-----END PGP PRIVATE KEY BLOCK-----"}];
}
