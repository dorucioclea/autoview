{
  "schema": {
    "$ref": "#/$defs/IShoppingOrderPublish"
  },
  "$defs": {
    "IShoppingOrderPublish.ICreate": {
      "description": "Creation info of the publish.",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address to receive",
          "description": "Address to receive.",
          "$ref": "#/$defs/IShoppingAddress.ICreate"
        },
        "vendor": {
          "title": "Payment identifier from the payment vendor service",
          "description": "Payment identifier from the payment vendor service.\n\nIf the order has been discounted for entire order price, then no need\nto send payment vendor info. Instead, you just configure the `null`\nvalue to this property.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/IShoppingOrderPublish.IPaymentIdentifier"
            }
          ]
        }
      },
      "required": [
        "address",
        "vendor"
      ]
    },
    "IShoppingAddress.ICreate": {
      "type": "object",
      "properties": {
        "mobile": {
          "title": "Mobile number to contact",
          "description": "Mobile number to contact.",
          "type": "string",
          "pattern": "^[0-9]*$"
        },
        "name": {
          "title": "Representative name of the address",
          "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name.",
          "type": "string"
        },
        "country": {
          "title": "Country name",
          "description": "Country name.",
          "type": "string"
        },
        "province": {
          "title": "Province name",
          "description": "Province name.",
          "type": "string"
        },
        "city": {
          "title": "City name",
          "description": "City name.",
          "type": "string"
        },
        "department": {
          "title": "Department name",
          "description": "Department name.",
          "type": "string"
        },
        "possession": {
          "title": "Detailed address containing street name, building number, and room number",
          "description": "Detailed address containing street name, building number, and room number.",
          "type": "string"
        },
        "zip_code": {
          "title": "Zip code, or postal code",
          "description": "Zip code, or postal code.",
          "type": "string"
        },
        "special_note": {
          "title": "Special description if required",
          "description": "Special description if required.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "mobile",
        "name",
        "country",
        "province",
        "city",
        "department",
        "possession",
        "zip_code",
        "special_note"
      ]
    },
    "IShoppingOrderPublish.IPaymentIdentifier": {
      "description": "Payment identifier from the payment vendor service.",
      "type": "object",
      "properties": {
        "code": {
          "title": "The vendor code who will receive the payment",
          "description": "The vendor code who will receive the payment.",
          "x-wrtn-payment-vendor": true,
          "type": "string"
        },
        "uid": {
          "title": "The payment uid",
          "description": "The payment uid.",
          "x-wrtn-payment-uid": true,
          "type": "string"
        }
      },
      "required": [
        "code",
        "uid"
      ]
    },
    "IShoppingOrderPublish": {
      "description": "Order completion and payment information.\n\n`IShoppingOrderPublish` is an entity that embodies the series of processes\nin which a {@link IShoppingCustomer customer} pays for his or her\n{@link IShoppingOrder order}, thereby completing the order. And only after\nthe order is {@link paid_at completed}, can the {@link IShoppingSeller seller}\nrecognize that the customer has purchased his product.\n\nBy the way, please note that just because the `IShoppingOrderPublish` record\nexists, it does not mean that the payment has been completed. Of course, with\n\"credit cards\" and \"Google Pay\", payment application and payment occur at the\nsame time. However, there are some cases where payment is made after the\npayment application, such as \"bank transfer\" or \"virtual account payment\".\nTherefore, to see the completion of payment, be sure to check the\n{@link paid_at} property.\n\nIn addition, even after payment has been made, there may be cases where it is\nsuddenly cancelled, so please be aware of this as well.",
      "type": "object",
      "properties": {
        "deliveries": {
          "title": "List of deliveries",
          "description": "List of deliveries.\n\nAn {@link IShoppingOrder order} can be delivered in multiple times.\nOf course, the opposite case is also possible, that a\n{@link IShoppingDelivery delivery} can be composed of multiple orders.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingDelivery"
          }
        },
        "state": {
          "title": "State of the order, about the deliveries",
          "description": "State of the order, about the deliveries.",
          "oneOf": [
            {
              "const": "none"
            },
            {
              "const": "underway"
            },
            {
              "const": "preparing"
            },
            {
              "const": "manufacturing"
            },
            {
              "const": "shipping"
            },
            {
              "const": "delivering"
            },
            {
              "const": "arrived"
            }
          ]
        },
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        },
        "paid_at": {
          "title": "Time when the order was paid",
          "description": "Time when the order was paid.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "cancelled_at": {
          "title": "Time when the payment was cancelled",
          "description": "Time when the payment was cancelled.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "address": {
          "title": "Address where the {@link IShoppingOrderGood goods} to be delivered",
          "description": "Address where the {@link IShoppingOrderGood goods} to be delivered.",
          "$ref": "#/$defs/IShoppingAddress"
        }
      },
      "required": [
        "deliveries",
        "state",
        "id",
        "created_at",
        "paid_at",
        "cancelled_at",
        "address"
      ]
    },
    "IShoppingDelivery": {
      "description": "Delivery information.\n\nWhen delivering {@link IShoppingOrderGood goods} to\n{@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\nmultiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\npossible to deliver a stock or good in multiple times due to physical restriction\nlike volume or weight problem.\n\nAs you can see from above, the relationship between delivery with\n{@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\nN: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\nrelationship, by referencing target stocks or goods through subsidiary entity\n{@link IShoppingDeliveryPiece}.\n\nAlso, delivery does not end with only one step. It has multiple processes like\nmanufacturing, planning, shipping and delivering. Those steps are represented by\nanother subsidiary entity {@link IShoppingDeliveryJourney}.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "seller": {
          "title": "Seller who've delivered the goods",
          "description": "Seller who've delivered the goods.",
          "$ref": "#/$defs/IShoppingSeller"
        },
        "journeys": {
          "title": "List of journeys of the delivery",
          "description": "List of journeys of the delivery.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingDeliveryJourney"
          }
        },
        "pieces": {
          "title": "List of pieces of the delivery",
          "description": "List of pieces of the delivery.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingDeliveryPiece"
          },
          "minItems": 1
        },
        "shippers": {
          "title": "List of shippers of the delivery",
          "description": "List of shippers of the delivery.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingDeliveryShipper"
          }
        },
        "state": {
          "title": "State of the delivery",
          "description": "State of the delivery.",
          "oneOf": [
            {
              "const": "none"
            },
            {
              "const": "underway"
            },
            {
              "const": "preparing"
            },
            {
              "const": "manufacturing"
            },
            {
              "const": "shipping"
            },
            {
              "const": "delivering"
            },
            {
              "const": "arrived"
            }
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "seller",
        "journeys",
        "pieces",
        "shippers",
        "state",
        "created_at"
      ]
    },
    "IShoppingSeller": {
      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Creation tmie of record",
          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "created_at"
      ]
    },
    "IShoppingDeliveryJourney": {
      "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "title": "Deletion time of the record",
          "description": "Deletion time of the record.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "type": {
          "title": "Type of journey",
          "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering",
          "oneOf": [
            {
              "const": "preparing"
            },
            {
              "const": "manufacturing"
            },
            {
              "const": "shipping"
            },
            {
              "const": "delivering"
            }
          ]
        },
        "title": {
          "title": "Title of journey",
          "description": "Title of journey.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        },
        "description": {
          "title": "Description of journey",
          "description": "Description of journey.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        },
        "started_at": {
          "title": "Start time of the journey",
          "description": "Start time of the journey.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "completed_at": {
          "title": "Completion time of the journey",
          "description": "Completion time of the journey.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        }
      },
      "required": [
        "id",
        "created_at",
        "deleted_at",
        "type",
        "title",
        "description",
        "started_at",
        "completed_at"
      ]
    },
    "IShoppingDeliveryPiece": {
      "description": "Which stocks are delivered.\n\n`IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing how much quantity is delivered for each\n{@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder}.\n\nFor reference, as an order can be delivered in multiple times due to volume\nor weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\nrecords for a single stock.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "publish_id": {
          "title": "Target order's {@link IShoppingOrderPublish.id}",
          "description": "Target order's {@link IShoppingOrderPublish.id}.",
          "type": "string",
          "format": "uuid"
        },
        "good_id": {
          "title": "Target good's {@link IShoppingOrderGood.id}",
          "description": "Target good's {@link IShoppingOrderGood.id}.",
          "type": "string",
          "format": "uuid"
        },
        "stock_id": {
          "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
          "description": "Target stock's {@link IShoppingSaleUnitStock.id}.",
          "type": "string",
          "format": "uuid"
        },
        "quantity": {
          "title": "Quantity of the stock",
          "description": "Quantity of the stock.\n\nIt can be precision value to express split shipping.",
          "type": "number",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "publish_id",
        "good_id",
        "stock_id",
        "quantity"
      ]
    },
    "IShoppingDeliveryShipper": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "company": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "company",
        "name",
        "mobile"
      ]
    },
    "IShoppingAddress": {
      "description": "The address information.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Creation time of record",
          "description": "Creation time of record.",
          "type": "string",
          "format": "date-time"
        },
        "mobile": {
          "title": "Mobile number to contact",
          "description": "Mobile number to contact.",
          "type": "string",
          "pattern": "^[0-9]*$"
        },
        "name": {
          "title": "Representative name of the address",
          "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name.",
          "type": "string"
        },
        "country": {
          "title": "Country name",
          "description": "Country name.",
          "type": "string"
        },
        "province": {
          "title": "Province name",
          "description": "Province name.",
          "type": "string"
        },
        "city": {
          "title": "City name",
          "description": "City name.",
          "type": "string"
        },
        "department": {
          "title": "Department name",
          "description": "Department name.",
          "type": "string"
        },
        "possession": {
          "title": "Detailed address containing street name, building number, and room number",
          "description": "Detailed address containing street name, building number, and room number.",
          "type": "string"
        },
        "zip_code": {
          "title": "Zip code, or postal code",
          "description": "Zip code, or postal code.",
          "type": "string"
        },
        "special_note": {
          "title": "Special description if required",
          "description": "Special description if required.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "id",
        "created_at",
        "mobile",
        "name",
        "country",
        "province",
        "city",
        "department",
        "possession",
        "zip_code",
        "special_note"
      ]
    }
  }
}