{
  "schema": {
    "$ref": "#/$defs/release"
  },
  "$defs": {
    "IApiReposReleases.PatchBody": {
      "type": "object",
      "properties": {
        "tag_name": {
          "description": "The name of the tag.",
          "type": "string"
        },
        "target_commitish": {
          "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch.",
          "type": "string"
        },
        "name": {
          "description": "The name of the release.",
          "type": "string"
        },
        "body": {
          "description": "Text describing the contents of the tag.",
          "type": "string"
        },
        "draft": {
          "description": "`true` makes the release a draft, and `false` publishes the release.",
          "type": "boolean"
        },
        "prerelease": {
          "description": "`true` to identify the release as a prerelease, `false` to identify the release as a full release.",
          "type": "boolean"
        },
        "make_latest": {
          "description": "Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Defaults to `true` for newly published releases. `legacy` specifies that the latest release should be determined based on the release creation date and higher semantic version.",
          "oneOf": [
            {
              "const": "true"
            },
            {
              "const": "false"
            },
            {
              "const": "legacy"
            }
          ]
        },
        "discussion_category_name": {
          "description": "If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. If there is already a discussion linked to the release, this parameter is ignored. For more information, see \"[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository).\"",
          "type": "string"
        }
      },
      "required": []
    },
    "release": {
      "title": "Release",
      "description": "A release.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "html_url": {
          "type": "string",
          "format": "uri"
        },
        "assets_url": {
          "type": "string",
          "format": "uri"
        },
        "upload_url": {
          "type": "string"
        },
        "tarball_url": {
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ]
        },
        "zipball_url": {
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "tag_name": {
          "description": "The name of the tag.",
          "example": "v1.0.0",
          "type": "string"
        },
        "target_commitish": {
          "description": "Specifies the commitish value that determines where the Git tag is created from.",
          "example": "master",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "body": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "draft": {
          "description": "true to create a draft (unpublished) release, false to create a published one.",
          "example": false,
          "type": "boolean"
        },
        "prerelease": {
          "description": "Whether to identify the release as a prerelease or a full release.",
          "example": false,
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "published_at": {
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "author": {
          "$ref": "#/$defs/simple-user"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/release-asset"
          }
        },
        "body_html": {
          "type": "string"
        },
        "body_text": {
          "type": "string"
        },
        "mentions_count": {
          "type": "integer"
        },
        "discussion_url": {
          "description": "The URL of the release discussion.",
          "type": "string",
          "format": "uri"
        },
        "reactions": {
          "$ref": "#/$defs/reaction-rollup"
        }
      },
      "required": [
        "assets_url",
        "upload_url",
        "tarball_url",
        "zipball_url",
        "created_at",
        "published_at",
        "draft",
        "id",
        "node_id",
        "author",
        "html_url",
        "name",
        "prerelease",
        "tag_name",
        "target_commitish",
        "assets",
        "url"
      ]
    },
    "simple-user": {
      "title": "Simple User",
      "description": "A GitHub user.",
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "email": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "login": {
          "example": "octocat",
          "type": "string"
        },
        "id": {
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "node_id": {
          "example": "MDQ6VXNlcjE=",
          "type": "string"
        },
        "avatar_url": {
          "example": "https://github.com/images/error/octocat_happy.gif",
          "type": "string",
          "format": "uri"
        },
        "gravatar_id": {
          "example": "41d064eb2195891e12d0413f63227ea7",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "url": {
          "example": "https://api.github.com/users/octocat",
          "type": "string",
          "format": "uri"
        },
        "html_url": {
          "example": "https://github.com/octocat",
          "type": "string",
          "format": "uri"
        },
        "followers_url": {
          "example": "https://api.github.com/users/octocat/followers",
          "type": "string",
          "format": "uri"
        },
        "following_url": {
          "example": "https://api.github.com/users/octocat/following{/other_user}",
          "type": "string"
        },
        "gists_url": {
          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
          "type": "string"
        },
        "starred_url": {
          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "type": "string"
        },
        "subscriptions_url": {
          "example": "https://api.github.com/users/octocat/subscriptions",
          "type": "string",
          "format": "uri"
        },
        "organizations_url": {
          "example": "https://api.github.com/users/octocat/orgs",
          "type": "string",
          "format": "uri"
        },
        "repos_url": {
          "example": "https://api.github.com/users/octocat/repos",
          "type": "string",
          "format": "uri"
        },
        "events_url": {
          "example": "https://api.github.com/users/octocat/events{/privacy}",
          "type": "string"
        },
        "received_events_url": {
          "example": "https://api.github.com/users/octocat/received_events",
          "type": "string",
          "format": "uri"
        },
        "type": {
          "example": "User",
          "type": "string"
        },
        "site_admin": {
          "type": "boolean"
        },
        "starred_at": {
          "example": "\"2020-07-09T00:17:55Z\"",
          "type": "string"
        },
        "user_view_type": {
          "example": "public",
          "type": "string"
        }
      },
      "required": [
        "avatar_url",
        "events_url",
        "followers_url",
        "following_url",
        "gists_url",
        "gravatar_id",
        "html_url",
        "id",
        "node_id",
        "login",
        "organizations_url",
        "received_events_url",
        "repos_url",
        "site_admin",
        "starred_url",
        "subscriptions_url",
        "type",
        "url"
      ]
    },
    "release-asset": {
      "title": "Release Asset",
      "description": "Data related to a release.",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "browser_download_url": {
          "type": "string",
          "format": "uri"
        },
        "id": {
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "description": "The file name of the asset.",
          "example": "Team Environment",
          "type": "string"
        },
        "label": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "state": {
          "description": "State of the release asset.",
          "oneOf": [
            {
              "const": "uploaded"
            },
            {
              "const": "open"
            }
          ]
        },
        "content_type": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "download_count": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "uploader": {
          "$ref": "#/$defs/nullable-simple-user"
        }
      },
      "required": [
        "id",
        "name",
        "content_type",
        "size",
        "state",
        "url",
        "node_id",
        "download_count",
        "label",
        "uploader",
        "browser_download_url",
        "created_at",
        "updated_at"
      ]
    },
    "nullable-simple-user": {
      "title": "Simple User",
      "description": "A GitHub user.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "name": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "email": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "login": {
              "example": "octocat",
              "type": "string"
            },
            "id": {
              "example": 1,
              "type": "integer",
              "format": "int64"
            },
            "node_id": {
              "example": "MDQ6VXNlcjE=",
              "type": "string"
            },
            "avatar_url": {
              "example": "https://github.com/images/error/octocat_happy.gif",
              "type": "string",
              "format": "uri"
            },
            "gravatar_id": {
              "example": "41d064eb2195891e12d0413f63227ea7",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "example": "https://api.github.com/users/octocat",
              "type": "string",
              "format": "uri"
            },
            "html_url": {
              "example": "https://github.com/octocat",
              "type": "string",
              "format": "uri"
            },
            "followers_url": {
              "example": "https://api.github.com/users/octocat/followers",
              "type": "string",
              "format": "uri"
            },
            "following_url": {
              "example": "https://api.github.com/users/octocat/following{/other_user}",
              "type": "string"
            },
            "gists_url": {
              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
              "type": "string"
            },
            "starred_url": {
              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "type": "string"
            },
            "subscriptions_url": {
              "example": "https://api.github.com/users/octocat/subscriptions",
              "type": "string",
              "format": "uri"
            },
            "organizations_url": {
              "example": "https://api.github.com/users/octocat/orgs",
              "type": "string",
              "format": "uri"
            },
            "repos_url": {
              "example": "https://api.github.com/users/octocat/repos",
              "type": "string",
              "format": "uri"
            },
            "events_url": {
              "example": "https://api.github.com/users/octocat/events{/privacy}",
              "type": "string"
            },
            "received_events_url": {
              "example": "https://api.github.com/users/octocat/received_events",
              "type": "string",
              "format": "uri"
            },
            "type": {
              "example": "User",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_at": {
              "example": "\"2020-07-09T00:17:55Z\"",
              "type": "string"
            },
            "user_view_type": {
              "example": "public",
              "type": "string"
            }
          },
          "required": [
            "avatar_url",
            "events_url",
            "followers_url",
            "following_url",
            "gists_url",
            "gravatar_id",
            "html_url",
            "id",
            "node_id",
            "login",
            "organizations_url",
            "received_events_url",
            "repos_url",
            "site_admin",
            "starred_url",
            "subscriptions_url",
            "type",
            "url"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "reaction-rollup": {
      "title": "Reaction Rollup",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "total_count": {
          "type": "integer"
        },
        "+1": {
          "type": "integer"
        },
        "-1": {
          "type": "integer"
        },
        "laugh": {
          "type": "integer"
        },
        "confused": {
          "type": "integer"
        },
        "heart": {
          "type": "integer"
        },
        "hooray": {
          "type": "integer"
        },
        "eyes": {
          "type": "integer"
        },
        "rocket": {
          "type": "integer"
        }
      },
      "required": [
        "url",
        "total_count",
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray",
        "eyes",
        "rocket"
      ]
    }
  }
}