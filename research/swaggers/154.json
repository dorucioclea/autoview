{
  "schema": {
    "$ref": "#/$defs/IPageIShoppingSaleSnapshot.ISummary"
  },
  "$defs": {
    "IPage.IRequest": {
      "description": "Page request data",
      "type": "object",
      "properties": {
        "page": {
          "title": "Page number",
          "description": "Page number.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "integer",
              "minimum": 0
            }
          ]
        },
        "limit": {
          "title": "Limitation of records per a page",
          "description": "Limitation of records per a page.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "integer",
              "minimum": 0
            }
          ]
        }
      },
      "required": []
    },
    "IPageIShoppingSaleSnapshot.ISummary": {
      "description": "A page.\n\nCollection of records with pagination indformation.",
      "type": "object",
      "properties": {
        "pagination": {
          "title": "Page information",
          "description": "Page information.",
          "$ref": "#/$defs/IPage.IPagination"
        },
        "data": {
          "title": "List of records",
          "description": "List of records.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingSaleSnapshot.ISummary"
          }
        }
      },
      "required": [
        "pagination",
        "data"
      ]
    },
    "IPage.IPagination": {
      "description": "Page information.",
      "type": "object",
      "properties": {
        "current": {
          "title": "Current page number",
          "description": "Current page number.",
          "type": "integer",
          "minimum": 0
        },
        "limit": {
          "title": "Limitation of records per a page",
          "description": "Limitation of records per a page.",
          "type": "integer",
          "minimum": 0
        },
        "records": {
          "title": "Total records in the database",
          "description": "Total records in the database.",
          "type": "integer",
          "minimum": 0
        },
        "pages": {
          "title": "Total pages",
          "description": "Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling.",
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "current",
        "limit",
        "records",
        "pages"
      ]
    },
    "IShoppingSaleSnapshot.ISummary": {
      "description": "Summarized information of the sale snapshot.",
      "type": "object",
      "properties": {
        "price_range": {
          "title": "Price range of the unit",
          "description": "Price range of the unit.",
          "$ref": "#/$defs/IShoppingSalePriceRange"
        },
        "id": {
          "title": "Primary Key of Sale",
          "description": "Primary Key of Sale.",
          "type": "string",
          "format": "uuid"
        },
        "snapshot_id": {
          "title": "Primary Key of Snapshot",
          "description": "Primary Key of Snapshot.",
          "type": "string",
          "format": "uuid"
        },
        "latest": {
          "title": "Whether the snapshot is the latest one or not",
          "description": "Whether the snapshot is the latest one or not.",
          "type": "boolean"
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Description and image content describing the sale.",
          "$ref": "#/$defs/IShoppingSaleContent.IInvert"
        },
        "categories": {
          "title": "List of categories",
          "description": "List of categories.\n\nWhich categories the sale is registered to.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
          }
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "units": {
          "title": "List of units",
          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingSaleUnit.ISummary"
          },
          "minItems": 1
        }
      },
      "required": [
        "price_range",
        "id",
        "snapshot_id",
        "latest",
        "content",
        "categories",
        "tags",
        "units"
      ]
    },
    "IShoppingSalePriceRange": {
      "type": "object",
      "properties": {
        "lowest": {
          "$ref": "#/$defs/IShoppingPrice"
        },
        "highest": {
          "$ref": "#/$defs/IShoppingPrice"
        }
      },
      "required": [
        "lowest",
        "highest"
      ]
    },
    "IShoppingPrice": {
      "description": "Shopping price interface.",
      "type": "object",
      "properties": {
        "nominal": {
          "title": "Nominal price",
          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
          "type": "number",
          "minimum": 0
        },
        "real": {
          "title": "Real price to pay",
          "description": "Real price to pay.",
          "type": "number",
          "minimum": 0
        }
      },
      "required": [
        "nominal",
        "real"
      ]
    },
    "IShoppingSaleContent.IInvert": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        },
        "thumbnails": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/IAttachmentFile"
          }
        }
      },
      "required": [
        "id",
        "title",
        "thumbnails"
      ]
    },
    "IAttachmentFile": {
      "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Creation time of attachment file",
          "description": "Creation time of attachment file.",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "title": "File name, except extension",
          "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
          "type": "string",
          "maxLength": 255
        },
        "extension": {
          "title": "Extension",
          "description": "Extension.\n\nPossible to omit like `README` case.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 8
            }
          ]
        },
        "url": {
          "title": "URL path of the real file",
          "description": "URL path of the real file.",
          "type": "string",
          "format": "uri",
          "contentMediaType": "image/*"
        }
      },
      "required": [
        "id",
        "created_at",
        "name",
        "extension",
        "url"
      ]
    },
    "IShoppingChannelCategory.IInvert": {
      "description": "Invert category information with parent category.",
      "type": "object",
      "properties": {
        "parent": {
          "title": "Parent category info with recursive structure",
          "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
            }
          ]
        },
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "title": "Identifier code of the category",
          "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
          "type": "string"
        },
        "parent_id": {
          "title": "Parent category's ID",
          "description": "Parent category's ID.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "uuid"
            }
          ]
        },
        "name": {
          "title": "Representative name of the category",
          "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
          "type": "string"
        },
        "created_at": {
          "title": "Creation time of record",
          "description": "Creation time of record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "parent",
        "id",
        "code",
        "parent_id",
        "name",
        "created_at"
      ]
    },
    "IShoppingSaleUnit.ISummary": {
      "type": "object",
      "properties": {
        "price_range": {
          "$ref": "#/$defs/IShoppingSalePriceRange"
        },
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "title": "Representative name of the unit",
          "description": "Representative name of the unit.",
          "type": "string"
        },
        "primary": {
          "title": "Whether the unit is primary or not",
          "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
          "type": "boolean"
        },
        "required": {
          "title": "Whether the unit is required or not",
          "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
          "type": "boolean"
        }
      },
      "required": [
        "price_range",
        "id",
        "name",
        "primary",
        "required"
      ]
    }
  }
}