{
  "schema": {
    "$ref": "#/$defs/IShoppingSale.ICreate"
  },
  "$defs": {
    "IShoppingSale.ICreate": {
      "description": "Creation information of sale.",
      "type": "object",
      "properties": {
        "section_code": {
          "title": "Belonged section's {@link IShoppingSection.code}",
          "description": "Belonged section's {@link IShoppingSection.code}.",
          "type": "string"
        },
        "status": {
          "title": "Initial status of the sale",
          "description": "Initial status of the sale.\n\n`null` or `undefined`: No restriction\n`paused`: Starts with {@link ITimestamps.paused_at paused} status\n`suspended`: Starts with {@link ITimestamps.suspended_at suspended} status",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "const": "paused"
            },
            {
              "const": "suspended"
            }
          ]
        },
        "opened_at": {
          "title": "Opening time of the sale",
          "description": "Opening time of the sale.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the sale",
          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Description and image content describing the sale.",
          "$ref": "#/$defs/IShoppingSaleContent.ICreate"
        },
        "units": {
          "title": "List of units",
          "description": "List of units.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingSaleUnit.ICreate"
          },
          "minItems": 1
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "category_codes": {
          "title": "List of target categories' {@link IShoppingChannelCategory.code}s",
          "description": "List of target categories' {@link IShoppingChannelCategory.code}s.\n\nIf empty, it means all categories of the channel is listing the sale.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "section_code",
        "opened_at",
        "closed_at",
        "content",
        "units",
        "tags",
        "category_codes"
      ]
    },
    "IShoppingSaleContent.ICreate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "format": {
          "oneOf": [
            {
              "const": "html"
            },
            {
              "const": "md"
            },
            {
              "const": "txt"
            }
          ]
        },
        "body": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/IAttachmentFile.ICreate"
          }
        },
        "thumbnails": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/IAttachmentFile.ICreate"
          }
        }
      },
      "required": [
        "title",
        "format",
        "body",
        "files",
        "thumbnails"
      ]
    },
    "IAttachmentFile.ICreate": {
      "type": "object",
      "properties": {
        "name": {
          "title": "File name, except extension",
          "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
          "type": "string",
          "maxLength": 255
        },
        "extension": {
          "title": "Extension",
          "description": "Extension.\n\nPossible to omit like `README` case.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 8
            }
          ]
        },
        "url": {
          "title": "URL path of the real file",
          "description": "URL path of the real file.",
          "type": "string",
          "format": "uri",
          "contentMediaType": "image/*"
        }
      },
      "required": [
        "name",
        "extension",
        "url"
      ]
    },
    "IShoppingSaleUnit.ICreate": {
      "description": "Creation information of sale unit.",
      "type": "object",
      "properties": {
        "options": {
          "title": "List of options",
          "description": "List of options.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/$defs/IShoppingSaleUnitSelectableOption.ICreate"
              },
              {
                "$ref": "#/$defs/IShoppingSaleUnitDescriptiveOption.ICreate"
              }
            ]
          }
        },
        "stocks": {
          "title": "List of final stocks",
          "description": "List of final stocks.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingSaleUnitStock.ICreate"
          },
          "minItems": 1
        },
        "name": {
          "title": "Representative name of the unit",
          "description": "Representative name of the unit.",
          "type": "string"
        },
        "primary": {
          "title": "Whether the unit is primary or not",
          "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
          "type": "boolean"
        },
        "required": {
          "title": "Whether the unit is required or not",
          "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
          "type": "boolean"
        }
      },
      "required": [
        "options",
        "stocks",
        "name",
        "primary",
        "required"
      ]
    },
    "IShoppingSaleUnitSelectableOption.ICreate": {
      "description": "Creation information of the selectable option.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Discriminant for the type of selectable option",
          "description": "Discriminant for the type of selectable option.",
          "const": "select"
        },
        "name": {
          "title": "Represents the name of the option",
          "description": "Represents the name of the option.",
          "type": "string"
        },
        "variable": {
          "title": "Whether the option is variable or not",
          "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
          "type": "boolean"
        },
        "candidates": {
          "title": "List of candidate values",
          "description": "List of candidate values.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingSaleUnitOptionCandidate.ICreate"
          },
          "minItems": 1
        }
      },
      "required": [
        "type",
        "name",
        "variable",
        "candidates"
      ]
    },
    "IShoppingSaleUnitOptionCandidate.ICreate": {
      "description": "Creation information of the candidate value.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Represents the name of the candidate value",
          "description": "Represents the name of the candidate value.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "IShoppingSaleUnitDescriptiveOption.ICreate": {
      "description": "Creation information of the descriptive option.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type of descriptive option",
          "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
          "oneOf": [
            {
              "const": "string"
            },
            {
              "const": "number"
            },
            {
              "const": "boolean"
            }
          ]
        },
        "name": {
          "title": "Readable name of the option",
          "description": "Readable name of the option.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "IShoppingSaleUnitStock.ICreate": {
      "description": "Creation information of the stock.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Representative name of the stock",
          "description": "Representative name of the stock.",
          "type": "string"
        },
        "price": {
          "title": "Price of the stock",
          "description": "Price of the stock.",
          "$ref": "#/$defs/IShoppingPrice"
        },
        "quantity": {
          "title": "Initial inventory quantity",
          "description": "Initial inventory quantity.",
          "type": "integer",
          "minimum": 1
        },
        "choices": {
          "title": "List of choices",
          "description": "List of choices.\n\nWhich candidate values being chosen for each option.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/IShoppingSaleUnitStockChoice.ICreate"
          }
        }
      },
      "required": [
        "name",
        "price",
        "quantity",
        "choices"
      ]
    },
    "IShoppingPrice": {
      "description": "Shopping price interface.",
      "type": "object",
      "properties": {
        "nominal": {
          "title": "Nominal price",
          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
          "type": "number",
          "minimum": 0
        },
        "real": {
          "title": "Real price to pay",
          "description": "Real price to pay.",
          "type": "number",
          "minimum": 0
        }
      },
      "required": [
        "nominal",
        "real"
      ]
    },
    "IShoppingSaleUnitStockChoice.ICreate": {
      "description": "Creation information of stock choice.",
      "type": "object",
      "properties": {
        "option_index": {
          "description": "Target option's index number in\n{@link IShoppingSaleUnit.ICreate.options}.",
          "type": "integer",
          "minimum": 0
        },
        "candidate_index": {
          "description": "Target candidate's index number in\n{@link IShoppingSaleUnitSelectableOption.ICreate.candidates}.",
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "option_index",
        "candidate_index"
      ]
    }
  }
}