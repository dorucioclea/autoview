{
  "schema": {
    "$ref": "#/$defs/issue"
  },
  "$defs": {
    "IApiReposIssues.PatchBody": {
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the issue.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ]
        },
        "body": {
          "description": "The contents of the issue.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignee": {
          "description": "Username to assign to this issue. **This field is closing down.**",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "state": {
          "description": "The open or closed state of the issue.",
          "oneOf": [
            {
              "const": "open"
            },
            {
              "const": "closed"
            }
          ]
        },
        "state_reason": {
          "description": "The reason for the state change. Ignored unless `state` is changed.",
          "example": "not_planned",
          "oneOf": [
            {
              "const": "completed"
            },
            {
              "const": "not_planned"
            },
            {
              "const": "reopened"
            },
            {
              "type": "null"
            }
          ]
        },
        "milestone": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer",
              "description": "The `number` of the milestone to associate this issue with or use `null` to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped."
            },
            {
              "type": "null"
            }
          ]
        },
        "labels": {
          "description": "Labels to associate with this issue. Pass one or more labels to _replace_ the set of labels on this issue. Send an empty array (`[]`) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "color": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": []
              }
            ]
          }
        },
        "assignees": {
          "description": "Usernames to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this issue. Send an empty array (`[]`) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "The name of the issue type to associate with this issue or use `null` to remove the current issue type. Only users with push access can set the type for issues. Without push access to the repository, type changes are silently dropped.",
          "example": "Epic",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": []
    },
    "issue": {
      "title": "Issue",
      "description": "Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "node_id": {
          "type": "string"
        },
        "url": {
          "description": "URL for the issue",
          "example": "https://api.github.com/repositories/42/issues/1",
          "type": "string",
          "format": "uri"
        },
        "repository_url": {
          "type": "string",
          "format": "uri"
        },
        "labels_url": {
          "type": "string"
        },
        "comments_url": {
          "type": "string",
          "format": "uri"
        },
        "events_url": {
          "type": "string",
          "format": "uri"
        },
        "html_url": {
          "type": "string",
          "format": "uri"
        },
        "number": {
          "description": "Number uniquely identifying the issue within its repository",
          "example": 42,
          "type": "integer"
        },
        "state": {
          "description": "State of the issue; either 'open' or 'closed'",
          "example": "open",
          "type": "string"
        },
        "state_reason": {
          "description": "The reason for the current state",
          "example": "not_planned",
          "oneOf": [
            {
              "const": "completed"
            },
            {
              "const": "reopened"
            },
            {
              "const": "not_planned"
            },
            {
              "type": "null"
            }
          ]
        },
        "title": {
          "description": "Title of the issue",
          "example": "Widget creation fails in Safari on OS X 10.8",
          "type": "string"
        },
        "body": {
          "description": "Contents of the issue",
          "example": "It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "user": {
          "$ref": "#/$defs/nullable-simple-user"
        },
        "labels": {
          "description": "Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
          "example": [
            "bug",
            "registration"
          ],
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "color": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "default": {
                    "type": "boolean"
                  }
                },
                "required": []
              }
            ]
          }
        },
        "assignee": {
          "$ref": "#/$defs/nullable-simple-user"
        },
        "assignees": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/simple-user"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "milestone": {
          "$ref": "#/$defs/nullable-milestone"
        },
        "locked": {
          "type": "boolean"
        },
        "active_lock_reason": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "comments": {
          "type": "integer"
        },
        "pull_request": {
          "type": "object",
          "properties": {
            "merged_at": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ]
            },
            "diff_url": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ]
            },
            "html_url": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ]
            },
            "patch_url": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "diff_url",
            "html_url",
            "patch_url",
            "url"
          ]
        },
        "closed_at": {
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "draft": {
          "type": "boolean"
        },
        "closed_by": {
          "$ref": "#/$defs/nullable-simple-user"
        },
        "body_html": {
          "type": "string"
        },
        "body_text": {
          "type": "string"
        },
        "timeline_url": {
          "type": "string",
          "format": "uri"
        },
        "type": {
          "$ref": "#/$defs/issue-type"
        },
        "repository": {
          "$ref": "#/$defs/repository"
        },
        "performed_via_github_app": {
          "$ref": "#/$defs/nullable-integration"
        },
        "author_association": {
          "$ref": "#/$defs/author-association"
        },
        "reactions": {
          "$ref": "#/$defs/reaction-rollup"
        },
        "sub_issues_summary": {
          "$ref": "#/$defs/sub-issues-summary"
        }
      },
      "required": [
        "assignee",
        "closed_at",
        "comments",
        "comments_url",
        "events_url",
        "html_url",
        "id",
        "node_id",
        "labels",
        "labels_url",
        "milestone",
        "number",
        "repository_url",
        "state",
        "locked",
        "title",
        "url",
        "user",
        "author_association",
        "created_at",
        "updated_at"
      ]
    },
    "nullable-simple-user": {
      "title": "Simple User",
      "description": "A GitHub user.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "name": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "email": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "login": {
              "example": "octocat",
              "type": "string"
            },
            "id": {
              "example": 1,
              "type": "integer",
              "format": "int64"
            },
            "node_id": {
              "example": "MDQ6VXNlcjE=",
              "type": "string"
            },
            "avatar_url": {
              "example": "https://github.com/images/error/octocat_happy.gif",
              "type": "string",
              "format": "uri"
            },
            "gravatar_id": {
              "example": "41d064eb2195891e12d0413f63227ea7",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "example": "https://api.github.com/users/octocat",
              "type": "string",
              "format": "uri"
            },
            "html_url": {
              "example": "https://github.com/octocat",
              "type": "string",
              "format": "uri"
            },
            "followers_url": {
              "example": "https://api.github.com/users/octocat/followers",
              "type": "string",
              "format": "uri"
            },
            "following_url": {
              "example": "https://api.github.com/users/octocat/following{/other_user}",
              "type": "string"
            },
            "gists_url": {
              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
              "type": "string"
            },
            "starred_url": {
              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "type": "string"
            },
            "subscriptions_url": {
              "example": "https://api.github.com/users/octocat/subscriptions",
              "type": "string",
              "format": "uri"
            },
            "organizations_url": {
              "example": "https://api.github.com/users/octocat/orgs",
              "type": "string",
              "format": "uri"
            },
            "repos_url": {
              "example": "https://api.github.com/users/octocat/repos",
              "type": "string",
              "format": "uri"
            },
            "events_url": {
              "example": "https://api.github.com/users/octocat/events{/privacy}",
              "type": "string"
            },
            "received_events_url": {
              "example": "https://api.github.com/users/octocat/received_events",
              "type": "string",
              "format": "uri"
            },
            "type": {
              "example": "User",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_at": {
              "example": "\"2020-07-09T00:17:55Z\"",
              "type": "string"
            },
            "user_view_type": {
              "example": "public",
              "type": "string"
            }
          },
          "required": [
            "avatar_url",
            "events_url",
            "followers_url",
            "following_url",
            "gists_url",
            "gravatar_id",
            "html_url",
            "id",
            "node_id",
            "login",
            "organizations_url",
            "received_events_url",
            "repos_url",
            "site_admin",
            "starred_url",
            "subscriptions_url",
            "type",
            "url"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "simple-user": {
      "title": "Simple User",
      "description": "A GitHub user.",
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "email": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "login": {
          "example": "octocat",
          "type": "string"
        },
        "id": {
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "node_id": {
          "example": "MDQ6VXNlcjE=",
          "type": "string"
        },
        "avatar_url": {
          "example": "https://github.com/images/error/octocat_happy.gif",
          "type": "string",
          "format": "uri"
        },
        "gravatar_id": {
          "example": "41d064eb2195891e12d0413f63227ea7",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "url": {
          "example": "https://api.github.com/users/octocat",
          "type": "string",
          "format": "uri"
        },
        "html_url": {
          "example": "https://github.com/octocat",
          "type": "string",
          "format": "uri"
        },
        "followers_url": {
          "example": "https://api.github.com/users/octocat/followers",
          "type": "string",
          "format": "uri"
        },
        "following_url": {
          "example": "https://api.github.com/users/octocat/following{/other_user}",
          "type": "string"
        },
        "gists_url": {
          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
          "type": "string"
        },
        "starred_url": {
          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "type": "string"
        },
        "subscriptions_url": {
          "example": "https://api.github.com/users/octocat/subscriptions",
          "type": "string",
          "format": "uri"
        },
        "organizations_url": {
          "example": "https://api.github.com/users/octocat/orgs",
          "type": "string",
          "format": "uri"
        },
        "repos_url": {
          "example": "https://api.github.com/users/octocat/repos",
          "type": "string",
          "format": "uri"
        },
        "events_url": {
          "example": "https://api.github.com/users/octocat/events{/privacy}",
          "type": "string"
        },
        "received_events_url": {
          "example": "https://api.github.com/users/octocat/received_events",
          "type": "string",
          "format": "uri"
        },
        "type": {
          "example": "User",
          "type": "string"
        },
        "site_admin": {
          "type": "boolean"
        },
        "starred_at": {
          "example": "\"2020-07-09T00:17:55Z\"",
          "type": "string"
        },
        "user_view_type": {
          "example": "public",
          "type": "string"
        }
      },
      "required": [
        "avatar_url",
        "events_url",
        "followers_url",
        "following_url",
        "gists_url",
        "gravatar_id",
        "html_url",
        "id",
        "node_id",
        "login",
        "organizations_url",
        "received_events_url",
        "repos_url",
        "site_admin",
        "starred_url",
        "subscriptions_url",
        "type",
        "url"
      ]
    },
    "nullable-milestone": {
      "title": "Milestone",
      "description": "A collection of related issues and pull requests.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "url": {
              "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
              "type": "string",
              "format": "uri"
            },
            "html_url": {
              "example": "https://github.com/octocat/Hello-World/milestones/v1.0",
              "type": "string",
              "format": "uri"
            },
            "labels_url": {
              "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
              "type": "string",
              "format": "uri"
            },
            "id": {
              "example": 1002604,
              "type": "integer"
            },
            "node_id": {
              "example": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
              "type": "string"
            },
            "number": {
              "description": "The number of the milestone.",
              "example": 42,
              "type": "integer"
            },
            "state": {
              "description": "The state of the milestone.",
              "example": "open",
              "oneOf": [
                {
                  "const": "open"
                },
                {
                  "const": "closed"
                }
              ]
            },
            "title": {
              "description": "The title of the milestone.",
              "example": "v1.0",
              "type": "string"
            },
            "description": {
              "example": "Tracking milestone for version 1.0",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "creator": {
              "$ref": "#/$defs/nullable-simple-user"
            },
            "open_issues": {
              "example": 4,
              "type": "integer"
            },
            "closed_issues": {
              "example": 8,
              "type": "integer"
            },
            "created_at": {
              "example": "2011-04-10T20:09:31Z",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "example": "2014-03-03T18:58:10Z",
              "type": "string",
              "format": "date-time"
            },
            "closed_at": {
              "example": "2013-02-12T13:22:01Z",
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ]
            },
            "due_on": {
              "example": "2012-10-09T23:39:01Z",
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "closed_issues",
            "creator",
            "description",
            "due_on",
            "closed_at",
            "id",
            "node_id",
            "labels_url",
            "html_url",
            "number",
            "open_issues",
            "state",
            "title",
            "url",
            "created_at",
            "updated_at"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "issue-type": {
      "title": "Issue Type",
      "description": "The type of issue.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "The unique identifier of the issue type.",
              "type": "integer"
            },
            "node_id": {
              "description": "The node identifier of the issue type.",
              "type": "string"
            },
            "name": {
              "description": "The name of the issue type.",
              "type": "string"
            },
            "description": {
              "description": "The description of the issue type.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "color": {
              "description": "The color of the issue type.",
              "oneOf": [
                {
                  "const": "gray"
                },
                {
                  "const": "blue"
                },
                {
                  "const": "green"
                },
                {
                  "const": "yellow"
                },
                {
                  "const": "orange"
                },
                {
                  "const": "red"
                },
                {
                  "const": "pink"
                },
                {
                  "const": "purple"
                },
                {
                  "type": "null"
                }
              ]
            },
            "created_at": {
              "description": "The time the issue type created.",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "description": "The time the issue type last updated.",
              "type": "string",
              "format": "date-time"
            },
            "is_enabled": {
              "description": "The enabled state of the issue type.",
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "node_id",
            "name",
            "description"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "repository": {
      "title": "Repository",
      "description": "A repository on GitHub.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the repository",
          "example": 42,
          "type": "integer",
          "format": "int64"
        },
        "node_id": {
          "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "type": "string"
        },
        "name": {
          "description": "The name of the repository.",
          "example": "Team Environment",
          "type": "string"
        },
        "full_name": {
          "example": "octocat/Hello-World",
          "type": "string"
        },
        "license": {
          "$ref": "#/$defs/nullable-license-simple"
        },
        "forks": {
          "type": "integer"
        },
        "permissions": {
          "type": "object",
          "properties": {
            "admin": {
              "type": "boolean"
            },
            "pull": {
              "type": "boolean"
            },
            "triage": {
              "type": "boolean"
            },
            "push": {
              "type": "boolean"
            },
            "maintain": {
              "type": "boolean"
            }
          },
          "required": [
            "admin",
            "pull",
            "push"
          ]
        },
        "owner": {
          "$ref": "#/$defs/simple-user"
        },
        "private": {
          "description": "Whether the repository is private or public.",
          "default": false,
          "type": "boolean"
        },
        "html_url": {
          "example": "https://github.com/octocat/Hello-World",
          "type": "string",
          "format": "uri"
        },
        "description": {
          "example": "This your first repo!",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "fork": {
          "type": "boolean"
        },
        "url": {
          "example": "https://api.github.com/repos/octocat/Hello-World",
          "type": "string",
          "format": "uri"
        },
        "archive_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "type": "string"
        },
        "assignees_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "type": "string"
        },
        "blobs_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "type": "string"
        },
        "branches_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "type": "string"
        },
        "collaborators_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "type": "string"
        },
        "comments_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "type": "string"
        },
        "commits_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "type": "string"
        },
        "compare_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "type": "string"
        },
        "contents_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "type": "string"
        },
        "contributors_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "type": "string",
          "format": "uri"
        },
        "deployments_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "type": "string",
          "format": "uri"
        },
        "downloads_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "type": "string",
          "format": "uri"
        },
        "events_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/events",
          "type": "string",
          "format": "uri"
        },
        "forks_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/forks",
          "type": "string",
          "format": "uri"
        },
        "git_commits_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "type": "string"
        },
        "git_refs_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "type": "string"
        },
        "git_tags_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "type": "string"
        },
        "git_url": {
          "example": "git:github.com/octocat/Hello-World.git",
          "type": "string"
        },
        "issue_comment_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "type": "string"
        },
        "issue_events_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "type": "string"
        },
        "issues_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "type": "string"
        },
        "keys_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "type": "string"
        },
        "labels_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "type": "string"
        },
        "languages_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/languages",
          "type": "string",
          "format": "uri"
        },
        "merges_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/merges",
          "type": "string",
          "format": "uri"
        },
        "milestones_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "type": "string"
        },
        "notifications_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "type": "string"
        },
        "pulls_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "type": "string"
        },
        "releases_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "type": "string"
        },
        "ssh_url": {
          "example": "git@github.com:octocat/Hello-World.git",
          "type": "string"
        },
        "stargazers_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "type": "string",
          "format": "uri"
        },
        "statuses_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "type": "string"
        },
        "subscribers_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "type": "string",
          "format": "uri"
        },
        "subscription_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "type": "string",
          "format": "uri"
        },
        "tags_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/tags",
          "type": "string",
          "format": "uri"
        },
        "teams_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/teams",
          "type": "string",
          "format": "uri"
        },
        "trees_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "type": "string"
        },
        "clone_url": {
          "example": "https://github.com/octocat/Hello-World.git",
          "type": "string"
        },
        "mirror_url": {
          "example": "git:git.example.com/octocat/Hello-World",
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ]
        },
        "hooks_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "type": "string",
          "format": "uri"
        },
        "svn_url": {
          "example": "https://svn.github.com/octocat/Hello-World",
          "type": "string",
          "format": "uri"
        },
        "homepage": {
          "example": "https://github.com",
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ]
        },
        "language": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "forks_count": {
          "example": 9,
          "type": "integer"
        },
        "stargazers_count": {
          "example": 80,
          "type": "integer"
        },
        "watchers_count": {
          "example": 80,
          "type": "integer"
        },
        "size": {
          "description": "The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.",
          "example": 108,
          "type": "integer"
        },
        "default_branch": {
          "description": "The default branch of the repository.",
          "example": "master",
          "type": "string"
        },
        "open_issues_count": {
          "example": 0,
          "type": "integer"
        },
        "is_template": {
          "description": "Whether this repository acts as a template that can be used to generate new repositories.",
          "example": true,
          "default": false,
          "type": "boolean"
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "has_issues": {
          "description": "Whether issues are enabled.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "has_projects": {
          "description": "Whether projects are enabled.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "has_wiki": {
          "description": "Whether the wiki is enabled.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "has_pages": {
          "type": "boolean"
        },
        "has_downloads": {
          "description": "Whether downloads are enabled.",
          "example": true,
          "default": true,
          "type": "boolean",
          "deprecated": true
        },
        "has_discussions": {
          "description": "Whether discussions are enabled.",
          "example": true,
          "default": false,
          "type": "boolean"
        },
        "archived": {
          "description": "Whether the repository is archived.",
          "default": false,
          "type": "boolean"
        },
        "disabled": {
          "description": "Returns whether or not this repository disabled.",
          "type": "boolean"
        },
        "visibility": {
          "description": "The repository visibility: public, private, or internal.",
          "default": "public",
          "type": "string"
        },
        "pushed_at": {
          "example": "2011-01-26T19:06:43Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "created_at": {
          "example": "2011-01-26T19:01:12Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "updated_at": {
          "example": "2011-01-26T19:14:43Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "allow_rebase_merge": {
          "description": "Whether to allow rebase merges for pull requests.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "temp_clone_token": {
          "type": "string"
        },
        "allow_squash_merge": {
          "description": "Whether to allow squash merges for pull requests.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "allow_auto_merge": {
          "description": "Whether to allow Auto-merge to be used on pull requests.",
          "example": false,
          "default": false,
          "type": "boolean"
        },
        "delete_branch_on_merge": {
          "description": "Whether to delete head branches when pull requests are merged",
          "example": false,
          "default": false,
          "type": "boolean"
        },
        "allow_update_branch": {
          "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
          "example": false,
          "default": false,
          "type": "boolean"
        },
        "use_squash_pr_title_as_default": {
          "description": "Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.",
          "type": "boolean",
          "default": false,
          "deprecated": true
        },
        "squash_merge_commit_title": {
          "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
          "oneOf": [
            {
              "const": "PR_TITLE"
            },
            {
              "const": "COMMIT_OR_PR_TITLE"
            }
          ]
        },
        "squash_merge_commit_message": {
          "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
          "oneOf": [
            {
              "const": "PR_BODY"
            },
            {
              "const": "COMMIT_MESSAGES"
            },
            {
              "const": "BLANK"
            }
          ]
        },
        "merge_commit_title": {
          "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
          "oneOf": [
            {
              "const": "PR_TITLE"
            },
            {
              "const": "MERGE_MESSAGE"
            }
          ]
        },
        "merge_commit_message": {
          "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
          "oneOf": [
            {
              "const": "PR_BODY"
            },
            {
              "const": "PR_TITLE"
            },
            {
              "const": "BLANK"
            }
          ]
        },
        "allow_merge_commit": {
          "description": "Whether to allow merge commits for pull requests.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "allow_forking": {
          "description": "Whether to allow forking this repo",
          "type": "boolean"
        },
        "web_commit_signoff_required": {
          "description": "Whether to require contributors to sign off on web-based commits",
          "default": false,
          "type": "boolean"
        },
        "open_issues": {
          "type": "integer"
        },
        "watchers": {
          "type": "integer"
        },
        "master_branch": {
          "type": "string"
        },
        "starred_at": {
          "example": "\"2020-07-09T00:17:42Z\"",
          "type": "string"
        },
        "anonymous_access_enabled": {
          "description": "Whether anonymous git access is enabled for this repository",
          "type": "boolean"
        }
      },
      "required": [
        "archive_url",
        "assignees_url",
        "blobs_url",
        "branches_url",
        "collaborators_url",
        "comments_url",
        "commits_url",
        "compare_url",
        "contents_url",
        "contributors_url",
        "deployments_url",
        "description",
        "downloads_url",
        "events_url",
        "fork",
        "forks_url",
        "full_name",
        "git_commits_url",
        "git_refs_url",
        "git_tags_url",
        "hooks_url",
        "html_url",
        "id",
        "node_id",
        "issue_comment_url",
        "issue_events_url",
        "issues_url",
        "keys_url",
        "labels_url",
        "languages_url",
        "merges_url",
        "milestones_url",
        "name",
        "notifications_url",
        "owner",
        "private",
        "pulls_url",
        "releases_url",
        "stargazers_url",
        "statuses_url",
        "subscribers_url",
        "subscription_url",
        "tags_url",
        "teams_url",
        "trees_url",
        "url",
        "clone_url",
        "default_branch",
        "forks",
        "forks_count",
        "git_url",
        "has_downloads",
        "has_issues",
        "has_projects",
        "has_wiki",
        "has_pages",
        "homepage",
        "language",
        "archived",
        "disabled",
        "mirror_url",
        "open_issues",
        "open_issues_count",
        "license",
        "pushed_at",
        "size",
        "ssh_url",
        "stargazers_count",
        "svn_url",
        "watchers",
        "watchers_count",
        "created_at",
        "updated_at"
      ]
    },
    "nullable-license-simple": {
      "title": "License Simple",
      "description": "License Simple",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "key": {
              "example": "mit",
              "type": "string"
            },
            "name": {
              "example": "MIT License",
              "type": "string"
            },
            "url": {
              "example": "https://api.github.com/licenses/mit",
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ]
            },
            "spdx_id": {
              "example": "MIT",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "node_id": {
              "example": "MDc6TGljZW5zZW1pdA==",
              "type": "string"
            },
            "html_url": {
              "type": "string",
              "format": "uri"
            }
          },
          "required": [
            "key",
            "name",
            "url",
            "spdx_id",
            "node_id"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "nullable-integration": {
      "title": "GitHub app",
      "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "Unique identifier of the GitHub app",
              "example": 37,
              "type": "integer"
            },
            "slug": {
              "description": "The slug name of the GitHub app",
              "example": "probot-owners",
              "type": "string"
            },
            "node_id": {
              "example": "MDExOkludGVncmF0aW9uMQ==",
              "type": "string"
            },
            "client_id": {
              "example": "\"Iv1.25b5d1e65ffc4022\"",
              "type": "string"
            },
            "owner": {
              "oneOf": [
                {
                  "$ref": "#/$defs/simple-user"
                },
                {
                  "$ref": "#/$defs/enterprise"
                }
              ]
            },
            "name": {
              "description": "The name of the GitHub app",
              "example": "Probot Owners",
              "type": "string"
            },
            "description": {
              "example": "The description of the app.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "external_url": {
              "example": "https://example.com",
              "type": "string",
              "format": "uri"
            },
            "html_url": {
              "example": "https://github.com/apps/super-ci",
              "type": "string",
              "format": "uri"
            },
            "created_at": {
              "example": "2017-07-08T16:18:44-04:00",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "example": "2017-07-08T16:18:44-04:00",
              "type": "string",
              "format": "date-time"
            },
            "permissions": {
              "description": "The set of permissions for the GitHub app",
              "example": {
                "issues": "read",
                "deployments": "write"
              },
              "type": "object",
              "properties": {
                "issues": {
                  "type": "string"
                },
                "checks": {
                  "type": "string"
                },
                "metadata": {
                  "type": "string"
                },
                "contents": {
                  "type": "string"
                },
                "deployments": {
                  "type": "string"
                }
              },
              "additionalProperties": {
                "type": "string"
              },
              "required": []
            },
            "events": {
              "description": "The list of events for the GitHub app",
              "example": [
                "label",
                "deployment"
              ],
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "installations_count": {
              "description": "The number of installations associated with the GitHub app",
              "example": 5,
              "type": "integer"
            },
            "client_secret": {
              "example": "\"1d4b2097ac622ba702d19de498f005747a8b21d3\"",
              "type": "string"
            },
            "webhook_secret": {
              "example": "\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pem": {
              "example": "\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\"",
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "owner",
            "name",
            "description",
            "external_url",
            "html_url",
            "created_at",
            "updated_at",
            "permissions",
            "events"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "enterprise": {
      "title": "Enterprise",
      "description": "An enterprise on GitHub.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A short description of the enterprise.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "html_url": {
          "example": "https://github.com/enterprises/octo-business",
          "type": "string",
          "format": "uri"
        },
        "website_url": {
          "description": "The enterprise's website URL.",
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "description": "Unique identifier of the enterprise",
          "example": 42,
          "type": "integer"
        },
        "node_id": {
          "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "type": "string"
        },
        "name": {
          "description": "The name of the enterprise.",
          "example": "Octo Business",
          "type": "string"
        },
        "slug": {
          "description": "The slug url identifier for the enterprise.",
          "example": "octo-business",
          "type": "string"
        },
        "created_at": {
          "example": "2019-01-26T19:01:12Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "updated_at": {
          "example": "2019-01-26T19:14:43Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "avatar_url": {
          "type": "string",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "node_id",
        "name",
        "slug",
        "html_url",
        "created_at",
        "updated_at",
        "avatar_url"
      ]
    },
    "author-association": {
      "title": "author_association",
      "description": "How the author is associated with the repository.",
      "example": "OWNER",
      "oneOf": [
        {
          "const": "COLLABORATOR"
        },
        {
          "const": "CONTRIBUTOR"
        },
        {
          "const": "FIRST_TIMER"
        },
        {
          "const": "FIRST_TIME_CONTRIBUTOR"
        },
        {
          "const": "MANNEQUIN"
        },
        {
          "const": "MEMBER"
        },
        {
          "const": "NONE"
        },
        {
          "const": "OWNER"
        }
      ]
    },
    "reaction-rollup": {
      "title": "Reaction Rollup",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "total_count": {
          "type": "integer"
        },
        "+1": {
          "type": "integer"
        },
        "-1": {
          "type": "integer"
        },
        "laugh": {
          "type": "integer"
        },
        "confused": {
          "type": "integer"
        },
        "heart": {
          "type": "integer"
        },
        "hooray": {
          "type": "integer"
        },
        "eyes": {
          "type": "integer"
        },
        "rocket": {
          "type": "integer"
        }
      },
      "required": [
        "url",
        "total_count",
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray",
        "eyes",
        "rocket"
      ]
    },
    "sub-issues-summary": {
      "title": "Sub-issues Summary",
      "type": "object",
      "properties": {
        "total": {
          "type": "integer"
        },
        "completed": {
          "type": "integer"
        },
        "percent_completed": {
          "type": "integer"
        }
      },
      "required": [
        "total",
        "completed",
        "percent_completed"
      ]
    }
  }
}