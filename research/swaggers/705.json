{
  "schema": {
    "type": "array",
    "items": {
      "$ref": "#/$defs/pull-request-simple"
    }
  },
  "$defs": {
    "pull-request-simple": {
      "title": "Pull Request Simple",
      "description": "Pull Request Simple",
      "type": "object",
      "properties": {
        "url": {
          "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
          "type": "string",
          "format": "uri"
        },
        "id": {
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "node_id": {
          "example": "MDExOlB1bGxSZXF1ZXN0MQ==",
          "type": "string"
        },
        "html_url": {
          "example": "https://github.com/octocat/Hello-World/pull/1347",
          "type": "string",
          "format": "uri"
        },
        "diff_url": {
          "example": "https://github.com/octocat/Hello-World/pull/1347.diff",
          "type": "string",
          "format": "uri"
        },
        "patch_url": {
          "example": "https://github.com/octocat/Hello-World/pull/1347.patch",
          "type": "string",
          "format": "uri"
        },
        "issue_url": {
          "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
          "type": "string",
          "format": "uri"
        },
        "commits_url": {
          "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
          "type": "string",
          "format": "uri"
        },
        "review_comments_url": {
          "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
          "type": "string",
          "format": "uri"
        },
        "review_comment_url": {
          "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
          "type": "string"
        },
        "comments_url": {
          "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
          "type": "string",
          "format": "uri"
        },
        "statuses_url": {
          "example": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "type": "string",
          "format": "uri"
        },
        "number": {
          "example": 1347,
          "type": "integer"
        },
        "state": {
          "example": "open",
          "type": "string"
        },
        "locked": {
          "example": true,
          "type": "boolean"
        },
        "title": {
          "example": "new-feature",
          "type": "string"
        },
        "user": {
          "$ref": "#/$defs/nullable-simple-user"
        },
        "body": {
          "example": "Please pull these awesome changes",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "node_id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "default": {
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "url",
              "name",
              "description",
              "color",
              "default"
            ]
          }
        },
        "milestone": {
          "$ref": "#/$defs/nullable-milestone"
        },
        "active_lock_reason": {
          "example": "too heated",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "created_at": {
          "example": "2011-01-26T19:01:12Z",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "example": "2011-01-26T19:01:12Z",
          "type": "string",
          "format": "date-time"
        },
        "closed_at": {
          "example": "2011-01-26T19:01:12Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "merged_at": {
          "example": "2011-01-26T19:01:12Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "merge_commit_sha": {
          "example": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignee": {
          "$ref": "#/$defs/nullable-simple-user"
        },
        "assignees": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/simple-user"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "requested_reviewers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/simple-user"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "requested_teams": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/team"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "head": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/$defs/repository"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/$defs/nullable-simple-user"
            }
          },
          "required": [
            "label",
            "ref",
            "repo",
            "sha",
            "user"
          ]
        },
        "base": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/$defs/repository"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/$defs/nullable-simple-user"
            }
          },
          "required": [
            "label",
            "ref",
            "repo",
            "sha",
            "user"
          ]
        },
        "_links": {
          "type": "object",
          "properties": {
            "comments": {
              "$ref": "#/$defs/link"
            },
            "commits": {
              "$ref": "#/$defs/link"
            },
            "statuses": {
              "$ref": "#/$defs/link"
            },
            "html": {
              "$ref": "#/$defs/link"
            },
            "issue": {
              "$ref": "#/$defs/link"
            },
            "review_comments": {
              "$ref": "#/$defs/link"
            },
            "review_comment": {
              "$ref": "#/$defs/link"
            },
            "self": {
              "$ref": "#/$defs/link"
            }
          },
          "required": [
            "comments",
            "commits",
            "statuses",
            "html",
            "issue",
            "review_comments",
            "review_comment",
            "self"
          ]
        },
        "author_association": {
          "$ref": "#/$defs/author-association"
        },
        "auto_merge": {
          "$ref": "#/$defs/auto-merge"
        },
        "draft": {
          "description": "Indicates whether or not the pull request is a draft.",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "_links",
        "assignee",
        "labels",
        "base",
        "body",
        "closed_at",
        "comments_url",
        "commits_url",
        "created_at",
        "diff_url",
        "head",
        "html_url",
        "id",
        "node_id",
        "issue_url",
        "merge_commit_sha",
        "merged_at",
        "milestone",
        "number",
        "patch_url",
        "review_comment_url",
        "review_comments_url",
        "statuses_url",
        "state",
        "locked",
        "title",
        "updated_at",
        "url",
        "user",
        "author_association",
        "auto_merge"
      ]
    },
    "nullable-simple-user": {
      "title": "Simple User",
      "description": "A GitHub user.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "name": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "email": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "login": {
              "example": "octocat",
              "type": "string"
            },
            "id": {
              "example": 1,
              "type": "integer",
              "format": "int64"
            },
            "node_id": {
              "example": "MDQ6VXNlcjE=",
              "type": "string"
            },
            "avatar_url": {
              "example": "https://github.com/images/error/octocat_happy.gif",
              "type": "string",
              "format": "uri"
            },
            "gravatar_id": {
              "example": "41d064eb2195891e12d0413f63227ea7",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "url": {
              "example": "https://api.github.com/users/octocat",
              "type": "string",
              "format": "uri"
            },
            "html_url": {
              "example": "https://github.com/octocat",
              "type": "string",
              "format": "uri"
            },
            "followers_url": {
              "example": "https://api.github.com/users/octocat/followers",
              "type": "string",
              "format": "uri"
            },
            "following_url": {
              "example": "https://api.github.com/users/octocat/following{/other_user}",
              "type": "string"
            },
            "gists_url": {
              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
              "type": "string"
            },
            "starred_url": {
              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "type": "string"
            },
            "subscriptions_url": {
              "example": "https://api.github.com/users/octocat/subscriptions",
              "type": "string",
              "format": "uri"
            },
            "organizations_url": {
              "example": "https://api.github.com/users/octocat/orgs",
              "type": "string",
              "format": "uri"
            },
            "repos_url": {
              "example": "https://api.github.com/users/octocat/repos",
              "type": "string",
              "format": "uri"
            },
            "events_url": {
              "example": "https://api.github.com/users/octocat/events{/privacy}",
              "type": "string"
            },
            "received_events_url": {
              "example": "https://api.github.com/users/octocat/received_events",
              "type": "string",
              "format": "uri"
            },
            "type": {
              "example": "User",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_at": {
              "example": "\"2020-07-09T00:17:55Z\"",
              "type": "string"
            },
            "user_view_type": {
              "example": "public",
              "type": "string"
            }
          },
          "required": [
            "avatar_url",
            "events_url",
            "followers_url",
            "following_url",
            "gists_url",
            "gravatar_id",
            "html_url",
            "id",
            "node_id",
            "login",
            "organizations_url",
            "received_events_url",
            "repos_url",
            "site_admin",
            "starred_url",
            "subscriptions_url",
            "type",
            "url"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "nullable-milestone": {
      "title": "Milestone",
      "description": "A collection of related issues and pull requests.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "url": {
              "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
              "type": "string",
              "format": "uri"
            },
            "html_url": {
              "example": "https://github.com/octocat/Hello-World/milestones/v1.0",
              "type": "string",
              "format": "uri"
            },
            "labels_url": {
              "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
              "type": "string",
              "format": "uri"
            },
            "id": {
              "example": 1002604,
              "type": "integer"
            },
            "node_id": {
              "example": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
              "type": "string"
            },
            "number": {
              "description": "The number of the milestone.",
              "example": 42,
              "type": "integer"
            },
            "state": {
              "description": "The state of the milestone.",
              "example": "open",
              "oneOf": [
                {
                  "const": "open"
                },
                {
                  "const": "closed"
                }
              ]
            },
            "title": {
              "description": "The title of the milestone.",
              "example": "v1.0",
              "type": "string"
            },
            "description": {
              "example": "Tracking milestone for version 1.0",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "creator": {
              "$ref": "#/$defs/nullable-simple-user"
            },
            "open_issues": {
              "example": 4,
              "type": "integer"
            },
            "closed_issues": {
              "example": 8,
              "type": "integer"
            },
            "created_at": {
              "example": "2011-04-10T20:09:31Z",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "example": "2014-03-03T18:58:10Z",
              "type": "string",
              "format": "date-time"
            },
            "closed_at": {
              "example": "2013-02-12T13:22:01Z",
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ]
            },
            "due_on": {
              "example": "2012-10-09T23:39:01Z",
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "closed_issues",
            "creator",
            "description",
            "due_on",
            "closed_at",
            "id",
            "node_id",
            "labels_url",
            "html_url",
            "number",
            "open_issues",
            "state",
            "title",
            "url",
            "created_at",
            "updated_at"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "simple-user": {
      "title": "Simple User",
      "description": "A GitHub user.",
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "email": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "login": {
          "example": "octocat",
          "type": "string"
        },
        "id": {
          "example": 1,
          "type": "integer",
          "format": "int64"
        },
        "node_id": {
          "example": "MDQ6VXNlcjE=",
          "type": "string"
        },
        "avatar_url": {
          "example": "https://github.com/images/error/octocat_happy.gif",
          "type": "string",
          "format": "uri"
        },
        "gravatar_id": {
          "example": "41d064eb2195891e12d0413f63227ea7",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "url": {
          "example": "https://api.github.com/users/octocat",
          "type": "string",
          "format": "uri"
        },
        "html_url": {
          "example": "https://github.com/octocat",
          "type": "string",
          "format": "uri"
        },
        "followers_url": {
          "example": "https://api.github.com/users/octocat/followers",
          "type": "string",
          "format": "uri"
        },
        "following_url": {
          "example": "https://api.github.com/users/octocat/following{/other_user}",
          "type": "string"
        },
        "gists_url": {
          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
          "type": "string"
        },
        "starred_url": {
          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "type": "string"
        },
        "subscriptions_url": {
          "example": "https://api.github.com/users/octocat/subscriptions",
          "type": "string",
          "format": "uri"
        },
        "organizations_url": {
          "example": "https://api.github.com/users/octocat/orgs",
          "type": "string",
          "format": "uri"
        },
        "repos_url": {
          "example": "https://api.github.com/users/octocat/repos",
          "type": "string",
          "format": "uri"
        },
        "events_url": {
          "example": "https://api.github.com/users/octocat/events{/privacy}",
          "type": "string"
        },
        "received_events_url": {
          "example": "https://api.github.com/users/octocat/received_events",
          "type": "string",
          "format": "uri"
        },
        "type": {
          "example": "User",
          "type": "string"
        },
        "site_admin": {
          "type": "boolean"
        },
        "starred_at": {
          "example": "\"2020-07-09T00:17:55Z\"",
          "type": "string"
        },
        "user_view_type": {
          "example": "public",
          "type": "string"
        }
      },
      "required": [
        "avatar_url",
        "events_url",
        "followers_url",
        "following_url",
        "gists_url",
        "gravatar_id",
        "html_url",
        "id",
        "node_id",
        "login",
        "organizations_url",
        "received_events_url",
        "repos_url",
        "site_admin",
        "starred_url",
        "subscriptions_url",
        "type",
        "url"
      ]
    },
    "team": {
      "title": "Team",
      "description": "Groups of organization members that gives permissions on specified repositories.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "description": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "privacy": {
          "type": "string"
        },
        "notification_setting": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        },
        "permissions": {
          "type": "object",
          "properties": {
            "pull": {
              "type": "boolean"
            },
            "triage": {
              "type": "boolean"
            },
            "push": {
              "type": "boolean"
            },
            "maintain": {
              "type": "boolean"
            },
            "admin": {
              "type": "boolean"
            }
          },
          "required": [
            "pull",
            "triage",
            "push",
            "maintain",
            "admin"
          ]
        },
        "url": {
          "type": "string",
          "format": "uri"
        },
        "html_url": {
          "example": "https://github.com/orgs/rails/teams/core",
          "type": "string",
          "format": "uri"
        },
        "members_url": {
          "type": "string"
        },
        "repositories_url": {
          "type": "string",
          "format": "uri"
        },
        "parent": {
          "$ref": "#/$defs/nullable-team-simple"
        }
      },
      "required": [
        "id",
        "node_id",
        "url",
        "members_url",
        "name",
        "description",
        "permission",
        "html_url",
        "repositories_url",
        "slug",
        "parent"
      ]
    },
    "nullable-team-simple": {
      "title": "Team Simple",
      "description": "Groups of organization members that gives permissions on specified repositories.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "Unique identifier of the team",
              "example": 1,
              "type": "integer"
            },
            "node_id": {
              "example": "MDQ6VGVhbTE=",
              "type": "string"
            },
            "url": {
              "description": "URL for the team",
              "example": "https://api.github.com/organizations/1/team/1",
              "type": "string",
              "format": "uri"
            },
            "members_url": {
              "example": "https://api.github.com/organizations/1/team/1/members{/member}",
              "type": "string"
            },
            "name": {
              "description": "Name of the team",
              "example": "Justice League",
              "type": "string"
            },
            "description": {
              "description": "Description of the team",
              "example": "A great team.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "permission": {
              "description": "Permission that the team will have for its repositories",
              "example": "admin",
              "type": "string"
            },
            "privacy": {
              "description": "The level of privacy this team should have",
              "example": "closed",
              "type": "string"
            },
            "notification_setting": {
              "description": "The notification setting the team has set",
              "example": "notifications_enabled",
              "type": "string"
            },
            "html_url": {
              "example": "https://github.com/orgs/rails/teams/core",
              "type": "string",
              "format": "uri"
            },
            "repositories_url": {
              "example": "https://api.github.com/organizations/1/team/1/repos",
              "type": "string",
              "format": "uri"
            },
            "slug": {
              "example": "justice-league",
              "type": "string"
            },
            "ldap_dn": {
              "description": "Distinguished Name (DN) that team maps to within LDAP environment",
              "example": "uid=example,ou=users,dc=github,dc=com",
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "url",
            "members_url",
            "name",
            "description",
            "permission",
            "html_url",
            "repositories_url",
            "slug"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "repository": {
      "title": "Repository",
      "description": "A repository on GitHub.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the repository",
          "example": 42,
          "type": "integer",
          "format": "int64"
        },
        "node_id": {
          "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "type": "string"
        },
        "name": {
          "description": "The name of the repository.",
          "example": "Team Environment",
          "type": "string"
        },
        "full_name": {
          "example": "octocat/Hello-World",
          "type": "string"
        },
        "license": {
          "$ref": "#/$defs/nullable-license-simple"
        },
        "forks": {
          "type": "integer"
        },
        "permissions": {
          "type": "object",
          "properties": {
            "admin": {
              "type": "boolean"
            },
            "pull": {
              "type": "boolean"
            },
            "triage": {
              "type": "boolean"
            },
            "push": {
              "type": "boolean"
            },
            "maintain": {
              "type": "boolean"
            }
          },
          "required": [
            "admin",
            "pull",
            "push"
          ]
        },
        "owner": {
          "$ref": "#/$defs/simple-user"
        },
        "private": {
          "description": "Whether the repository is private or public.",
          "default": false,
          "type": "boolean"
        },
        "html_url": {
          "example": "https://github.com/octocat/Hello-World",
          "type": "string",
          "format": "uri"
        },
        "description": {
          "example": "This your first repo!",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "fork": {
          "type": "boolean"
        },
        "url": {
          "example": "https://api.github.com/repos/octocat/Hello-World",
          "type": "string",
          "format": "uri"
        },
        "archive_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "type": "string"
        },
        "assignees_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "type": "string"
        },
        "blobs_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "type": "string"
        },
        "branches_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "type": "string"
        },
        "collaborators_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "type": "string"
        },
        "comments_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "type": "string"
        },
        "commits_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "type": "string"
        },
        "compare_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "type": "string"
        },
        "contents_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "type": "string"
        },
        "contributors_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "type": "string",
          "format": "uri"
        },
        "deployments_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "type": "string",
          "format": "uri"
        },
        "downloads_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "type": "string",
          "format": "uri"
        },
        "events_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/events",
          "type": "string",
          "format": "uri"
        },
        "forks_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/forks",
          "type": "string",
          "format": "uri"
        },
        "git_commits_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "type": "string"
        },
        "git_refs_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "type": "string"
        },
        "git_tags_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "type": "string"
        },
        "git_url": {
          "example": "git:github.com/octocat/Hello-World.git",
          "type": "string"
        },
        "issue_comment_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "type": "string"
        },
        "issue_events_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "type": "string"
        },
        "issues_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "type": "string"
        },
        "keys_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "type": "string"
        },
        "labels_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "type": "string"
        },
        "languages_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/languages",
          "type": "string",
          "format": "uri"
        },
        "merges_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/merges",
          "type": "string",
          "format": "uri"
        },
        "milestones_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "type": "string"
        },
        "notifications_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "type": "string"
        },
        "pulls_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "type": "string"
        },
        "releases_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "type": "string"
        },
        "ssh_url": {
          "example": "git@github.com:octocat/Hello-World.git",
          "type": "string"
        },
        "stargazers_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "type": "string",
          "format": "uri"
        },
        "statuses_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "type": "string"
        },
        "subscribers_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "type": "string",
          "format": "uri"
        },
        "subscription_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "type": "string",
          "format": "uri"
        },
        "tags_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/tags",
          "type": "string",
          "format": "uri"
        },
        "teams_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/teams",
          "type": "string",
          "format": "uri"
        },
        "trees_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "type": "string"
        },
        "clone_url": {
          "example": "https://github.com/octocat/Hello-World.git",
          "type": "string"
        },
        "mirror_url": {
          "example": "git:git.example.com/octocat/Hello-World",
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ]
        },
        "hooks_url": {
          "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "type": "string",
          "format": "uri"
        },
        "svn_url": {
          "example": "https://svn.github.com/octocat/Hello-World",
          "type": "string",
          "format": "uri"
        },
        "homepage": {
          "example": "https://github.com",
          "oneOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ]
        },
        "language": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "forks_count": {
          "example": 9,
          "type": "integer"
        },
        "stargazers_count": {
          "example": 80,
          "type": "integer"
        },
        "watchers_count": {
          "example": 80,
          "type": "integer"
        },
        "size": {
          "description": "The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.",
          "example": 108,
          "type": "integer"
        },
        "default_branch": {
          "description": "The default branch of the repository.",
          "example": "master",
          "type": "string"
        },
        "open_issues_count": {
          "example": 0,
          "type": "integer"
        },
        "is_template": {
          "description": "Whether this repository acts as a template that can be used to generate new repositories.",
          "example": true,
          "default": false,
          "type": "boolean"
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "has_issues": {
          "description": "Whether issues are enabled.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "has_projects": {
          "description": "Whether projects are enabled.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "has_wiki": {
          "description": "Whether the wiki is enabled.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "has_pages": {
          "type": "boolean"
        },
        "has_downloads": {
          "description": "Whether downloads are enabled.",
          "example": true,
          "default": true,
          "type": "boolean",
          "deprecated": true
        },
        "has_discussions": {
          "description": "Whether discussions are enabled.",
          "example": true,
          "default": false,
          "type": "boolean"
        },
        "archived": {
          "description": "Whether the repository is archived.",
          "default": false,
          "type": "boolean"
        },
        "disabled": {
          "description": "Returns whether or not this repository disabled.",
          "type": "boolean"
        },
        "visibility": {
          "description": "The repository visibility: public, private, or internal.",
          "default": "public",
          "type": "string"
        },
        "pushed_at": {
          "example": "2011-01-26T19:06:43Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "created_at": {
          "example": "2011-01-26T19:01:12Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "updated_at": {
          "example": "2011-01-26T19:14:43Z",
          "oneOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "null"
            }
          ]
        },
        "allow_rebase_merge": {
          "description": "Whether to allow rebase merges for pull requests.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "temp_clone_token": {
          "type": "string"
        },
        "allow_squash_merge": {
          "description": "Whether to allow squash merges for pull requests.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "allow_auto_merge": {
          "description": "Whether to allow Auto-merge to be used on pull requests.",
          "example": false,
          "default": false,
          "type": "boolean"
        },
        "delete_branch_on_merge": {
          "description": "Whether to delete head branches when pull requests are merged",
          "example": false,
          "default": false,
          "type": "boolean"
        },
        "allow_update_branch": {
          "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
          "example": false,
          "default": false,
          "type": "boolean"
        },
        "use_squash_pr_title_as_default": {
          "description": "Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.",
          "type": "boolean",
          "default": false,
          "deprecated": true
        },
        "squash_merge_commit_title": {
          "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
          "oneOf": [
            {
              "const": "PR_TITLE"
            },
            {
              "const": "COMMIT_OR_PR_TITLE"
            }
          ]
        },
        "squash_merge_commit_message": {
          "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
          "oneOf": [
            {
              "const": "PR_BODY"
            },
            {
              "const": "COMMIT_MESSAGES"
            },
            {
              "const": "BLANK"
            }
          ]
        },
        "merge_commit_title": {
          "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
          "oneOf": [
            {
              "const": "PR_TITLE"
            },
            {
              "const": "MERGE_MESSAGE"
            }
          ]
        },
        "merge_commit_message": {
          "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
          "oneOf": [
            {
              "const": "PR_BODY"
            },
            {
              "const": "PR_TITLE"
            },
            {
              "const": "BLANK"
            }
          ]
        },
        "allow_merge_commit": {
          "description": "Whether to allow merge commits for pull requests.",
          "example": true,
          "default": true,
          "type": "boolean"
        },
        "allow_forking": {
          "description": "Whether to allow forking this repo",
          "type": "boolean"
        },
        "web_commit_signoff_required": {
          "description": "Whether to require contributors to sign off on web-based commits",
          "default": false,
          "type": "boolean"
        },
        "open_issues": {
          "type": "integer"
        },
        "watchers": {
          "type": "integer"
        },
        "master_branch": {
          "type": "string"
        },
        "starred_at": {
          "example": "\"2020-07-09T00:17:42Z\"",
          "type": "string"
        },
        "anonymous_access_enabled": {
          "description": "Whether anonymous git access is enabled for this repository",
          "type": "boolean"
        }
      },
      "required": [
        "archive_url",
        "assignees_url",
        "blobs_url",
        "branches_url",
        "collaborators_url",
        "comments_url",
        "commits_url",
        "compare_url",
        "contents_url",
        "contributors_url",
        "deployments_url",
        "description",
        "downloads_url",
        "events_url",
        "fork",
        "forks_url",
        "full_name",
        "git_commits_url",
        "git_refs_url",
        "git_tags_url",
        "hooks_url",
        "html_url",
        "id",
        "node_id",
        "issue_comment_url",
        "issue_events_url",
        "issues_url",
        "keys_url",
        "labels_url",
        "languages_url",
        "merges_url",
        "milestones_url",
        "name",
        "notifications_url",
        "owner",
        "private",
        "pulls_url",
        "releases_url",
        "stargazers_url",
        "statuses_url",
        "subscribers_url",
        "subscription_url",
        "tags_url",
        "teams_url",
        "trees_url",
        "url",
        "clone_url",
        "default_branch",
        "forks",
        "forks_count",
        "git_url",
        "has_downloads",
        "has_issues",
        "has_projects",
        "has_wiki",
        "has_pages",
        "homepage",
        "language",
        "archived",
        "disabled",
        "mirror_url",
        "open_issues",
        "open_issues_count",
        "license",
        "pushed_at",
        "size",
        "ssh_url",
        "stargazers_count",
        "svn_url",
        "watchers",
        "watchers_count",
        "created_at",
        "updated_at"
      ]
    },
    "nullable-license-simple": {
      "title": "License Simple",
      "description": "License Simple",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "key": {
              "example": "mit",
              "type": "string"
            },
            "name": {
              "example": "MIT License",
              "type": "string"
            },
            "url": {
              "example": "https://api.github.com/licenses/mit",
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ]
            },
            "spdx_id": {
              "example": "MIT",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "node_id": {
              "example": "MDc6TGljZW5zZW1pdA==",
              "type": "string"
            },
            "html_url": {
              "type": "string",
              "format": "uri"
            }
          },
          "required": [
            "key",
            "name",
            "url",
            "spdx_id",
            "node_id"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "link": {
      "title": "Link",
      "description": "Hypermedia Link",
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "author-association": {
      "title": "author_association",
      "description": "How the author is associated with the repository.",
      "example": "OWNER",
      "oneOf": [
        {
          "const": "COLLABORATOR"
        },
        {
          "const": "CONTRIBUTOR"
        },
        {
          "const": "FIRST_TIMER"
        },
        {
          "const": "FIRST_TIME_CONTRIBUTOR"
        },
        {
          "const": "MANNEQUIN"
        },
        {
          "const": "MEMBER"
        },
        {
          "const": "NONE"
        },
        {
          "const": "OWNER"
        }
      ]
    },
    "auto-merge": {
      "title": "Auto merge",
      "description": "The status of auto merging a pull request.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "enabled_by": {
              "$ref": "#/$defs/simple-user"
            },
            "merge_method": {
              "description": "The merge method to use.",
              "oneOf": [
                {
                  "const": "merge"
                },
                {
                  "const": "squash"
                },
                {
                  "const": "rebase"
                }
              ]
            },
            "commit_title": {
              "description": "Title for the merge commit message.",
              "type": "string"
            },
            "commit_message": {
              "description": "Commit message for the merge commit.",
              "type": "string"
            }
          },
          "required": [
            "enabled_by",
            "merge_method",
            "commit_title",
            "commit_message"
          ]
        },
        {
          "type": "null"
        }
      ]
    }
  }
}